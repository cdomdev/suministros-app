---

const { url } = Astro.request;
import Layout from "@/layouts/Layout.astro";
import { getProductoBy } from "@/services/productos";
import { calcularDescuento } from "@/utils/calcularDescuento";
import { formateValue } from "@/utils/formatearValor";
import { BtnAddCar } from "@/components/carritoDecompras/BtnAddCar";
import MasVendidos from "@/components/MasVendidos.astro";
import type {  Producto } from "@/types/types";
import BreadCrums from "@/components/BreadCrums.astro";

const searchParams = new URL(url).searchParams;
const id = searchParams.get("id");

let producto: Producto | null = null ;

if (id) {
    producto = await getProductoBy(id);
}
let cat = ""
let sub = ""
if(producto){
   cat = producto.categoria.nombre
    sub =  producto.subcategoria.nombre
}

const priceWithDiscount = producto?.precio && calcularDescuento(producto?.precio, producto?.descuento)
const priceStandart = producto?.precio && formateValue(producto?.precio)
const valueRestant =
  (parseFloat(producto?.precio ?? "0") * (producto?.descuento ?? 0)) / 100;


---

<Layout title=`${producto?.titulo}`>
    <BreadCrums pagina={["productos", cat, sub  ]} class="pl-3"/>
    <section class="min-h-dvh">
        <article class="pt-5 max-w-[95vw] m-auto mb-5">
            <div class="flex flex-col gap-3 md:grid md:grid-cols-col-cust-2">
                <div class="flex flex-col items-center justify-center gap-3 ">
                    <div class="flex justify-end w-full pr-20">
                        { producto?.descuento ? 
                            <span class=" bg-red-600 text-base md:text-2xl px-2 text-white">{ producto?.descuento} %</span> : ''
                        }
                    </div>
                    <img
                    src={producto?.image}
                    alt={producto?.titulo}
                    loading="lazy"
                    class="size-56 hover:scale-105 duration-200"
                    />
                    <div
                        class="bg-[#f7f7f7] p-3 text-center m-auto block italic max-w-[90%]">
                        <p class="text-xs text-[#6b6c6d] leading-3">
                            las fotografías de productos y ambientes son
                            ilustrativas, los colores y texturas pueden variar
                            según el dispositivo donde se visualicen y pueden
                            diferir de la realidad. Los elementos ambientados no
                            se incluyen en la compra.
                        </p>
                    </div>
                </div>
                <div class="border p-3">
                    <div class="flex justify-between text-[#808080]">
                        <span class="text-base font-semibold uppercase">
                            {producto?.marca}
                        </span>
                        <span class="text-sm uppercase">
                            ref:{producto?.referencia}
                        </span>
                    </div>
                    <h2
                        class="text-base md:text-xl my-3 font-bold text-balance">
                        {producto?.titulo}
                    </h2>
                    <span class="flex flex-col  gap-2 mb-6">
                        <p class="font-semibold">Precio:</p>
                        {
                            producto?.descuento ? (
                               <strong class="text-xs flex flex-col text-red-700 opacity-[50%] md:text-lg">
  <span class="text-sm">Precio anterior:</span> ${priceStandart}
</strong>
<strong class="text-base md:text-2xl flex flex-col mb-2">
  <span class="text-sm">Precio actual:</span> ${priceWithDiscount}
</strong>
                               <p class="text-base font-semibold">Te ahorras: {formateValue(valueRestant.toString())}</p>

                            ) : (
                                <strong class="text-base md:text-2xl">
                                 $: {producto?.precio &&  formateValue(producto.precio)}
                                </strong>
                            )
                        }
                    </span>
                    <p class="text-sm leading-5 text-balance my-10">
                        {producto?.description}
                    </p>
                    <div class="flex gap-2">
                     {producto && <BtnAddCar producto={producto} client:load />}

                    </div>
                </div>
            </div>
        </article>
        <hr class="mb-4 border-dashed">
        <h3 class="text-center text-base md:text-xl my-4 font-semibold">Tambien te puede interesar</h3>
        <MasVendidos />
         
    </section>
</Layout>
