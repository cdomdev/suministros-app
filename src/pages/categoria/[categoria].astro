---
import CardProductos from "@/components/cards/CardProductos.astro";
import Layout from "../../layouts/Layout.astro";
import { getProductos } from "../../services/productos";
import type { ApiResponse } from "@/types/types";
import { obtenerMarcasUnicas } from "@/utils/MarcasUnicas";
import { subcategoriasUnicas } from "@/utils/subcategoriasUnicas";
import FiltrosCategorias from "@/components/filtros/filtrosCategorias.astro";
import FiltroMarcas from "@/components/filtros/filtroMarcas.astro";
import MigajasCategoria from "@/components/migajas/MigajasCategoria.astro";

const { categoria } = Astro.params;
let dataresponse: ApiResponse | null = null;
let marcasUnicas: string[] | null = null;
let categoriasUnicas: string[] | null = null;
const categoriaParseade = categoria?.toUpperCase();
const migajasTexParseada = categoria?.replaceAll("-", " ");

try {
  dataresponse = await getProductos("categorias", `${categoria}`);
  if (dataresponse) {
    marcasUnicas = obtenerMarcasUnicas(dataresponse.productos);
    categoriasUnicas = subcategoriasUnicas(dataresponse.productos);
  }
} catch (error) {
  console.error("Error al obtener los productos:", error);
}
---

<Layout title={categoriaParseade || ""}>
  <MigajasCategoria pagina={migajasTexParseada || ""} />
  <section
    class="w-full px-3 mx-auto flex flex-col md:grid gap-1 md:gap-2 md:grid-cols-cat-cust">
    <aside class="px-2 md:px-5 hidden md:flex">
      <div class="mt-2 w-full">
        <h1 class="text-lg font-semibold uppercase">{categoria}</h1>
        <span class="text-gray-500 uppercase text-[12px] mb-2">Filtros*</span>
        <div class="w-full bg-[#ececec] py-3 flex justify-start px-2">
          <h2 class="text-[18px]">Categor√≠as</h2>
        </div>
        <div class="pl-3 uppercase">
          {
            categoriasUnicas && categoriasUnicas.length > 0 ? (
              categoriasUnicas.map((categoria) => (
                <FiltrosCategorias categoria={categoria} />
              ))
            ) : (
              <div class="my-2 flex justify-center">
                <p>No hay categorias disponibles</p>
              </div>
            )
          }
        </div>
        <div class="w-full bg-[#ececec] py-3 flex justify-start px-2">
          <h2 class="text-[18px]">Marcas</h2>
        </div>
        <div class="pl-3">
          {
            marcasUnicas && marcasUnicas.length > 0 ? (
              marcasUnicas.map((marca) => <FiltroMarcas marca={marca} />)
            ) : (
              <div class="my-2 flex justify-center uppercase">
                <p>No hay marcas disponibles</p>
              </div>
            )
          }
        </div>
      </div>
    </aside>

    <section class="flex w-full flex-wrap p-2 justify-center flex-col">
      <span
        class=`text-sm md:text-base font-light uppercase mb-3 ${dataresponse && dataresponse?.productos?.length > 0 ? 'block' : 'hidden'}`>
        {dataresponse?.productos?.length} Productos
      </span>
      <div
        id="mensaje-no-productos"
        class="w-full justify-center text-base md:text-xl items-center text-red-500 font-semibold hidden text-center">
        No hay productos disponibles.
      </div>
      <div class="w-full gap-x-2 gap-y-2 md:gap-8 flex flex-wrap">
        {
          dataresponse && dataresponse.productos.length > 0 ? (
            dataresponse.productos.map((producto) => (
              <CardProductos
                id={producto.id}
                img={producto.image}
                precio={producto.valor}
                ref={producto.referencia}
                nombre={producto.nombre}
                descuento={producto.discount}
                marca={producto.marca}
                categoria={producto.subcategoria.nombre}
              />
            ))
          ) : (
            <></>
          )
        }
      </div>
    </section>

    <script type="module">
      document.addEventListener("DOMContentLoaded", () => {
        const filtroMarcas = document.querySelectorAll('input[name="marca"]');
        const filtroCategorias = document.querySelectorAll(
          'input[name="categoria"]',
        );
        const productos = document.querySelectorAll(".card-producto");
        const mensajeNoProductos = document.querySelector(
          "#mensaje-no-productos",
        );
        const noProductosCount = document.querySelector("#no-productos");

        function aplicarFiltros() {
          const marcasSeleccionadas = Array.from(filtroMarcas)
            .filter((input) => input.checked)
            .map((input) => input.value);
          const categoriasSeleccionadas = Array.from(filtroCategorias)
            .filter((input) => input.checked)
            .map((input) => input.value);

          let hayProductosVisibles = false;

          productos.forEach((producto) => {
            const marca = producto.getAttribute("data-marca");
            const categoria = producto.getAttribute("data-categoria");

            const mostrarProducto =
              (marcasSeleccionadas.length === 0 ||
                marcasSeleccionadas.includes(marca)) &&
              (categoriasSeleccionadas.length === 0 ||
                categoriasSeleccionadas.includes(categoria));

            producto.style.display = mostrarProducto ? "block" : "none";

            if (mostrarProducto) {
              hayProductosVisibles = true;
            }
          });

          mensajeNoProductos.style.display = hayProductosVisibles
            ? "none"
            : "block";

          noProductosCount.style.display = hayProductosVisibles
            ? "none"
            : "block";
        }

        filtroMarcas.forEach((input) =>
          input.addEventListener("change", aplicarFiltros),
        );
        filtroCategorias.forEach((input) =>
          input.addEventListener("change", aplicarFiltros),
        );

        // Inicializar estado del mensaje al cargar
        aplicarFiltros();
      });
    </script>
  </section>
</Layout>
